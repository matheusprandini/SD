/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package operacoesgrafo;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-05-18")
public class Aresta implements org.apache.thrift.TBase<Aresta, Aresta._Fields>, java.io.Serializable, Cloneable, Comparable<Aresta> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Aresta");

  private static final org.apache.thrift.protocol.TField NOME_FIELD_DESC = new org.apache.thrift.protocol.TField("nome", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField VERTICE1_FIELD_DESC = new org.apache.thrift.protocol.TField("vertice1", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField VERTICE2_FIELD_DESC = new org.apache.thrift.protocol.TField("vertice2", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField PESO_FIELD_DESC = new org.apache.thrift.protocol.TField("peso", org.apache.thrift.protocol.TType.DOUBLE, (short)4);
  private static final org.apache.thrift.protocol.TField DIRECIONADO_FIELD_DESC = new org.apache.thrift.protocol.TField("direcionado", org.apache.thrift.protocol.TType.BOOL, (short)5);
  private static final org.apache.thrift.protocol.TField DESCRICAO_FIELD_DESC = new org.apache.thrift.protocol.TField("descricao", org.apache.thrift.protocol.TType.STRING, (short)6);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new ArestaStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new ArestaTupleSchemeFactory();

  public long nome; // required
  public long vertice1; // required
  public long vertice2; // required
  public double peso; // required
  public boolean direcionado; // required
  public java.lang.String descricao; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NOME((short)1, "nome"),
    VERTICE1((short)2, "vertice1"),
    VERTICE2((short)3, "vertice2"),
    PESO((short)4, "peso"),
    DIRECIONADO((short)5, "direcionado"),
    DESCRICAO((short)6, "descricao");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NOME
          return NOME;
        case 2: // VERTICE1
          return VERTICE1;
        case 3: // VERTICE2
          return VERTICE2;
        case 4: // PESO
          return PESO;
        case 5: // DIRECIONADO
          return DIRECIONADO;
        case 6: // DESCRICAO
          return DESCRICAO;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __NOME_ISSET_ID = 0;
  private static final int __VERTICE1_ISSET_ID = 1;
  private static final int __VERTICE2_ISSET_ID = 2;
  private static final int __PESO_ISSET_ID = 3;
  private static final int __DIRECIONADO_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NOME, new org.apache.thrift.meta_data.FieldMetaData("nome", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERTICE1, new org.apache.thrift.meta_data.FieldMetaData("vertice1", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.VERTICE2, new org.apache.thrift.meta_data.FieldMetaData("vertice2", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PESO, new org.apache.thrift.meta_data.FieldMetaData("peso", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)));
    tmpMap.put(_Fields.DIRECIONADO, new org.apache.thrift.meta_data.FieldMetaData("direcionado", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.DESCRICAO, new org.apache.thrift.meta_data.FieldMetaData("descricao", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Aresta.class, metaDataMap);
  }

  public Aresta() {
  }

  public Aresta(
    long nome,
    long vertice1,
    long vertice2,
    double peso,
    boolean direcionado,
    java.lang.String descricao)
  {
    this();
    this.nome = nome;
    setNomeIsSet(true);
    this.vertice1 = vertice1;
    setVertice1IsSet(true);
    this.vertice2 = vertice2;
    setVertice2IsSet(true);
    this.peso = peso;
    setPesoIsSet(true);
    this.direcionado = direcionado;
    setDirecionadoIsSet(true);
    this.descricao = descricao;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Aresta(Aresta other) {
    __isset_bitfield = other.__isset_bitfield;
    this.nome = other.nome;
    this.vertice1 = other.vertice1;
    this.vertice2 = other.vertice2;
    this.peso = other.peso;
    this.direcionado = other.direcionado;
    if (other.isSetDescricao()) {
      this.descricao = other.descricao;
    }
  }

  public Aresta deepCopy() {
    return new Aresta(this);
  }

  @Override
  public void clear() {
    setNomeIsSet(false);
    this.nome = 0;
    setVertice1IsSet(false);
    this.vertice1 = 0;
    setVertice2IsSet(false);
    this.vertice2 = 0;
    setPesoIsSet(false);
    this.peso = 0.0;
    setDirecionadoIsSet(false);
    this.direcionado = false;
    this.descricao = null;
  }

  public long getNome() {
    return this.nome;
  }

  public Aresta setNome(long nome) {
    this.nome = nome;
    setNomeIsSet(true);
    return this;
  }

  public void unsetNome() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __NOME_ISSET_ID);
  }

  /** Returns true if field nome is set (has been assigned a value) and false otherwise */
  public boolean isSetNome() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __NOME_ISSET_ID);
  }

  public void setNomeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __NOME_ISSET_ID, value);
  }

  public long getVertice1() {
    return this.vertice1;
  }

  public Aresta setVertice1(long vertice1) {
    this.vertice1 = vertice1;
    setVertice1IsSet(true);
    return this;
  }

  public void unsetVertice1() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERTICE1_ISSET_ID);
  }

  /** Returns true if field vertice1 is set (has been assigned a value) and false otherwise */
  public boolean isSetVertice1() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERTICE1_ISSET_ID);
  }

  public void setVertice1IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERTICE1_ISSET_ID, value);
  }

  public long getVertice2() {
    return this.vertice2;
  }

  public Aresta setVertice2(long vertice2) {
    this.vertice2 = vertice2;
    setVertice2IsSet(true);
    return this;
  }

  public void unsetVertice2() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __VERTICE2_ISSET_ID);
  }

  /** Returns true if field vertice2 is set (has been assigned a value) and false otherwise */
  public boolean isSetVertice2() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __VERTICE2_ISSET_ID);
  }

  public void setVertice2IsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __VERTICE2_ISSET_ID, value);
  }

  public double getPeso() {
    return this.peso;
  }

  public Aresta setPeso(double peso) {
    this.peso = peso;
    setPesoIsSet(true);
    return this;
  }

  public void unsetPeso() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PESO_ISSET_ID);
  }

  /** Returns true if field peso is set (has been assigned a value) and false otherwise */
  public boolean isSetPeso() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PESO_ISSET_ID);
  }

  public void setPesoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PESO_ISSET_ID, value);
  }

  public boolean isDirecionado() {
    return this.direcionado;
  }

  public Aresta setDirecionado(boolean direcionado) {
    this.direcionado = direcionado;
    setDirecionadoIsSet(true);
    return this;
  }

  public void unsetDirecionado() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __DIRECIONADO_ISSET_ID);
  }

  /** Returns true if field direcionado is set (has been assigned a value) and false otherwise */
  public boolean isSetDirecionado() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __DIRECIONADO_ISSET_ID);
  }

  public void setDirecionadoIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __DIRECIONADO_ISSET_ID, value);
  }

  public java.lang.String getDescricao() {
    return this.descricao;
  }

  public Aresta setDescricao(java.lang.String descricao) {
    this.descricao = descricao;
    return this;
  }

  public void unsetDescricao() {
    this.descricao = null;
  }

  /** Returns true if field descricao is set (has been assigned a value) and false otherwise */
  public boolean isSetDescricao() {
    return this.descricao != null;
  }

  public void setDescricaoIsSet(boolean value) {
    if (!value) {
      this.descricao = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case NOME:
      if (value == null) {
        unsetNome();
      } else {
        setNome((java.lang.Long)value);
      }
      break;

    case VERTICE1:
      if (value == null) {
        unsetVertice1();
      } else {
        setVertice1((java.lang.Long)value);
      }
      break;

    case VERTICE2:
      if (value == null) {
        unsetVertice2();
      } else {
        setVertice2((java.lang.Long)value);
      }
      break;

    case PESO:
      if (value == null) {
        unsetPeso();
      } else {
        setPeso((java.lang.Double)value);
      }
      break;

    case DIRECIONADO:
      if (value == null) {
        unsetDirecionado();
      } else {
        setDirecionado((java.lang.Boolean)value);
      }
      break;

    case DESCRICAO:
      if (value == null) {
        unsetDescricao();
      } else {
        setDescricao((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NOME:
      return getNome();

    case VERTICE1:
      return getVertice1();

    case VERTICE2:
      return getVertice2();

    case PESO:
      return getPeso();

    case DIRECIONADO:
      return isDirecionado();

    case DESCRICAO:
      return getDescricao();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NOME:
      return isSetNome();
    case VERTICE1:
      return isSetVertice1();
    case VERTICE2:
      return isSetVertice2();
    case PESO:
      return isSetPeso();
    case DIRECIONADO:
      return isSetDirecionado();
    case DESCRICAO:
      return isSetDescricao();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof Aresta)
      return this.equals((Aresta)that);
    return false;
  }

  public boolean equals(Aresta that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_nome = true;
    boolean that_present_nome = true;
    if (this_present_nome || that_present_nome) {
      if (!(this_present_nome && that_present_nome))
        return false;
      if (this.nome != that.nome)
        return false;
    }

    boolean this_present_vertice1 = true;
    boolean that_present_vertice1 = true;
    if (this_present_vertice1 || that_present_vertice1) {
      if (!(this_present_vertice1 && that_present_vertice1))
        return false;
      if (this.vertice1 != that.vertice1)
        return false;
    }

    boolean this_present_vertice2 = true;
    boolean that_present_vertice2 = true;
    if (this_present_vertice2 || that_present_vertice2) {
      if (!(this_present_vertice2 && that_present_vertice2))
        return false;
      if (this.vertice2 != that.vertice2)
        return false;
    }

    boolean this_present_peso = true;
    boolean that_present_peso = true;
    if (this_present_peso || that_present_peso) {
      if (!(this_present_peso && that_present_peso))
        return false;
      if (this.peso != that.peso)
        return false;
    }

    boolean this_present_direcionado = true;
    boolean that_present_direcionado = true;
    if (this_present_direcionado || that_present_direcionado) {
      if (!(this_present_direcionado && that_present_direcionado))
        return false;
      if (this.direcionado != that.direcionado)
        return false;
    }

    boolean this_present_descricao = true && this.isSetDescricao();
    boolean that_present_descricao = true && that.isSetDescricao();
    if (this_present_descricao || that_present_descricao) {
      if (!(this_present_descricao && that_present_descricao))
        return false;
      if (!this.descricao.equals(that.descricao))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(nome);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(vertice1);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(vertice2);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(peso);

    hashCode = hashCode * 8191 + ((direcionado) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetDescricao()) ? 131071 : 524287);
    if (isSetDescricao())
      hashCode = hashCode * 8191 + descricao.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Aresta other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetNome()).compareTo(other.isSetNome());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNome()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.nome, other.nome);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVertice1()).compareTo(other.isSetVertice1());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVertice1()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vertice1, other.vertice1);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVertice2()).compareTo(other.isSetVertice2());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVertice2()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.vertice2, other.vertice2);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPeso()).compareTo(other.isSetPeso());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPeso()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.peso, other.peso);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDirecionado()).compareTo(other.isSetDirecionado());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDirecionado()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.direcionado, other.direcionado);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDescricao()).compareTo(other.isSetDescricao());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescricao()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.descricao, other.descricao);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Aresta(");
    boolean first = true;

    sb.append("nome:");
    sb.append(this.nome);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vertice1:");
    sb.append(this.vertice1);
    first = false;
    if (!first) sb.append(", ");
    sb.append("vertice2:");
    sb.append(this.vertice2);
    first = false;
    if (!first) sb.append(", ");
    sb.append("peso:");
    sb.append(this.peso);
    first = false;
    if (!first) sb.append(", ");
    sb.append("direcionado:");
    sb.append(this.direcionado);
    first = false;
    if (!first) sb.append(", ");
    sb.append("descricao:");
    if (this.descricao == null) {
      sb.append("null");
    } else {
      sb.append(this.descricao);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ArestaStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ArestaStandardScheme getScheme() {
      return new ArestaStandardScheme();
    }
  }

  private static class ArestaStandardScheme extends org.apache.thrift.scheme.StandardScheme<Aresta> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Aresta struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NOME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.nome = iprot.readI64();
              struct.setNomeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // VERTICE1
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.vertice1 = iprot.readI64();
              struct.setVertice1IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // VERTICE2
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.vertice2 = iprot.readI64();
              struct.setVertice2IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // PESO
            if (schemeField.type == org.apache.thrift.protocol.TType.DOUBLE) {
              struct.peso = iprot.readDouble();
              struct.setPesoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // DIRECIONADO
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.direcionado = iprot.readBool();
              struct.setDirecionadoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DESCRICAO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.descricao = iprot.readString();
              struct.setDescricaoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Aresta struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(NOME_FIELD_DESC);
      oprot.writeI64(struct.nome);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERTICE1_FIELD_DESC);
      oprot.writeI64(struct.vertice1);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERTICE2_FIELD_DESC);
      oprot.writeI64(struct.vertice2);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PESO_FIELD_DESC);
      oprot.writeDouble(struct.peso);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(DIRECIONADO_FIELD_DESC);
      oprot.writeBool(struct.direcionado);
      oprot.writeFieldEnd();
      if (struct.descricao != null) {
        oprot.writeFieldBegin(DESCRICAO_FIELD_DESC);
        oprot.writeString(struct.descricao);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ArestaTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public ArestaTupleScheme getScheme() {
      return new ArestaTupleScheme();
    }
  }

  private static class ArestaTupleScheme extends org.apache.thrift.scheme.TupleScheme<Aresta> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Aresta struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetNome()) {
        optionals.set(0);
      }
      if (struct.isSetVertice1()) {
        optionals.set(1);
      }
      if (struct.isSetVertice2()) {
        optionals.set(2);
      }
      if (struct.isSetPeso()) {
        optionals.set(3);
      }
      if (struct.isSetDirecionado()) {
        optionals.set(4);
      }
      if (struct.isSetDescricao()) {
        optionals.set(5);
      }
      oprot.writeBitSet(optionals, 6);
      if (struct.isSetNome()) {
        oprot.writeI64(struct.nome);
      }
      if (struct.isSetVertice1()) {
        oprot.writeI64(struct.vertice1);
      }
      if (struct.isSetVertice2()) {
        oprot.writeI64(struct.vertice2);
      }
      if (struct.isSetPeso()) {
        oprot.writeDouble(struct.peso);
      }
      if (struct.isSetDirecionado()) {
        oprot.writeBool(struct.direcionado);
      }
      if (struct.isSetDescricao()) {
        oprot.writeString(struct.descricao);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Aresta struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(6);
      if (incoming.get(0)) {
        struct.nome = iprot.readI64();
        struct.setNomeIsSet(true);
      }
      if (incoming.get(1)) {
        struct.vertice1 = iprot.readI64();
        struct.setVertice1IsSet(true);
      }
      if (incoming.get(2)) {
        struct.vertice2 = iprot.readI64();
        struct.setVertice2IsSet(true);
      }
      if (incoming.get(3)) {
        struct.peso = iprot.readDouble();
        struct.setPesoIsSet(true);
      }
      if (incoming.get(4)) {
        struct.direcionado = iprot.readBool();
        struct.setDirecionadoIsSet(true);
      }
      if (incoming.get(5)) {
        struct.descricao = iprot.readString();
        struct.setDescricaoIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

